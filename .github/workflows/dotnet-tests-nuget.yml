name: .NET 5 + Tests + Pack + Push no NuGet

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CAMINHO_PROJETO_TESTES: ./Groffe.Distancias.Testes
  CAMINHO_PROJETO: ./Groffe.Distancias/Groffe.Distancias.csproj

jobs:
  tests:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.102

    - name: Testes com .NET 5 + xUnit + Fluent Assertions + Coverlet
      run: dotnet test ${{ env.CAMINHO_PROJETO_TESTES }} --verbosity minimal --logger:"html;LogFileName=resultado-testes.html" --collect:"XPlat Code Coverage"

    #- name: Instalar ReportGenerator
    #  run: dotnet add package ReportGenerator --version 4.8.4 
  
    - name: Gerar relatório de cobertura de testes com ReportGenerator
      if: failure()
      run: |
        cd ${{ env.CAMINHO_PROJETO_TESTES }}/TestResults
        ls

  pack-push:
    env:
      CAMINHO_PROJETO: ./Groffe.Distancias/Groffe.Distancias.csproj

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.101

    - name: Geração do package
      run: dotnet pack ${{ env.CAMINHO_PROJETO }} -c Release -o out

    - name: Push no NuGet
      run: |
        cd out
        dotnet nuget push *.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ secrets.NUGET_SERVER }} --skip-duplicate
